"undefined"==typeof Number.prototype.toRadians&&(Number.prototype.toRadians=function(){return this*Math.PI/180}),"undefined"==typeof Number.prototype.toDegrees&&(Number.prototype.toDegrees=function(){return 180*this/Math.PI});var INTERSECT_LNG=179.999;L.Geodesic=L.MultiPolyline.extend({options:{color:"blue",steps:10,dash:1,wrap:!0},initialize:function(a,b){this.options=this._merge_options(this.options,b),this.datum={},this.datum.ellipsoid={a:6378137,b:6356752.3142,f:1/298.257223563},L.MultiPolyline.prototype.initialize.call(this,a,this.options)},setLatLngs:function(a){this._latlngs=this.options.dash<1?this._generate_GeodesicDashed(a):this._generate_Geodesic(a),L.MultiPolyline.prototype.setLatLngs.call(this,this._latlngs)},getStats:function(){var a,b,c={distance:0,points:0,polygons:this._latlngs.length};for(a=0;a<this._latlngs.length;a++)for(c.points+=this._latlngs[a].length,b=0;b<this._latlngs[a].length-1;b++)c.distance+=this._vincenty_inverse(this._latlngs[a][b],this._latlngs[a][b+1]).distance;return c},createCircle:function(a,b){var c,d=[],e=0,f={lat:0,lng:0,brg:0};d[e]=[];var g=this._vincenty_direct(L.latLng(a),0,b,this.options.wrap);for(f=L.latLng(g.lat,g.lng),d[e].push(f),c=1;c<=this.options.steps;){g=this._vincenty_direct(L.latLng(a),360/this.options.steps*c,b,this.options.wrap);var h=L.latLng(g.lat,g.lng);if(Math.abs(h.lng-f.lng)>180){var i=this._vincenty_inverse(f,h),j=this._intersection(f,i.initialBearing,{lat:-89,lng:h.lng-f.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);j?(d[e].push(L.latLng(j.lat,j.lng)),e++,d[e]=[],f=L.latLng(j.lat,-j.lng),d[e].push(f)):(e++,d[e]=[],d[e].push(h),f=h,c++)}else d[e].push(h),f=h,c++}this._latlngs=d,L.MultiPolyline.prototype.setLatLngs.call(this,this._latlngs)},_generate_Geodesic:function(a){var b,c,d,e=[],f=0;for(c=0;c<a.length;c++){for(e[f]=[],d=0;d<a[c].length-1;d++){var g=this._vincenty_inverse(L.latLng(a[c][d]),L.latLng(a[c][d+1])),h=L.latLng(a[c][d]);for(e[f].push(h),b=1;b<=this.options.steps;){var i=this._vincenty_direct(L.latLng(a[c][d]),g.initialBearing,g.distance/this.options.steps*b,this.options.wrap),j=L.latLng(i.lat,i.lng);if(Math.abs(j.lng-h.lng)>180){var k=this._intersection(L.latLng(a[c][d]),g.initialBearing,{lat:-89,lng:j.lng-h.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);k?(e[f].push(L.latLng(k.lat,k.lng)),f++,e[f]=[],h=L.latLng(k.lat,-k.lng),e[f].push(h)):(f++,e[f]=[],e[f].push(j),h=j,b++)}else e[f].push(j),h=j,b++}}f++}return e},_generate_GeodesicDashed:function(a){var b,c,d,e=[],f=0;for(c=0;c<a.length;c++){for(e[f]=[],d=0;d<a[c].length-1;d++){var g=this._vincenty_inverse(L.latLng(a[c][d]),L.latLng(a[c][d+1])),h=L.latLng(a[c][d]);for(e[f].push(h),b=1;b<=this.options.steps;){var i=this._vincenty_direct(L.latLng(a[c][d]),g.initialBearing,g.distance/this.options.steps*b-g.distance/this.options.steps*(1-this.options.dash),this.options.wrap),j=L.latLng(i.lat,i.lng);if(Math.abs(j.lng-h.lng)>180){var k=this._intersection(L.latLng(a[c][d]),g.initialBearing,{lat:-89,lng:j.lng-h.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);k?(e[f].push(L.latLng(k.lat,k.lng)),f++,e[f]=[],h=L.latLng(k.lat,-k.lng),e[f].push(h)):(f++,e[f]=[],e[f].push(j),h=j,b++)}else{e[f].push(j),f++;var l=this._vincenty_direct(L.latLng(a[c][d]),g.initialBearing,g.distance/this.options.steps*b,this.options.wrap);e[f]=[],e[f].push(L.latLng(l.lat,l.lng)),b++}}}f++}return e},_vincenty_direct:function(a,b,c,d){var e,f=a.lat.toRadians(),g=a.lng.toRadians(),h=b.toRadians(),i=c,j=this.datum.ellipsoid.a,k=this.datum.ellipsoid.b,l=this.datum.ellipsoid.f,m=Math.sin(h),n=Math.cos(h),o=(1-l)*Math.tan(f),p=1/Math.sqrt(1+o*o),q=o*p,r=Math.atan2(o,n),s=p*m,t=1-s*s,u=t*(j*j-k*k)/(k*k),v=1+u/16384*(4096+u*(-768+u*(320-175*u))),w=u/1024*(256+u*(-128+u*(74-47*u))),x=i/(k*v),y=0;do{var z=Math.cos(2*r+x),A=Math.sin(x),B=Math.cos(x),C=w*A*(z+w/4*(B*(-1+2*z*z)-w/6*z*(-3+4*A*A)*(-3+4*z*z)));e=x,x=i/(k*v)+C}while(Math.abs(x-e)>1e-12&&++y);var D,E=q*A-p*B*n,F=Math.atan2(q*B+p*A*n,(1-l)*Math.sqrt(s*s+E*E)),G=Math.atan2(A*m,p*B-q*A*n),H=l/16*t*(4+l*(4-3*t)),I=G-(1-H)*l*s*(x+H*A*(z+H*B*(-1+2*z*z)));D=d?(g+I+3*Math.PI)%(2*Math.PI)-Math.PI:g+I;var J=Math.atan2(s,-E);return{lat:F.toDegrees(),lng:D.toDegrees(),finalBearing:J.toDegrees()}},_vincenty_inverse:function(a,b){var c,d=a.lat.toRadians(),e=a.lng.toRadians(),f=b.lat.toRadians(),g=b.lng.toRadians(),h=this.datum.ellipsoid.a,i=this.datum.ellipsoid.b,j=this.datum.ellipsoid.f,k=g-e,l=(1-j)*Math.tan(d),m=1/Math.sqrt(1+l*l),n=l*m,o=(1-j)*Math.tan(f),p=1/Math.sqrt(1+o*o),q=o*p,r=k,s=0;do{var t=Math.sin(r),u=Math.cos(r),v=p*t*(p*t)+(m*q-n*p*u)*(m*q-n*p*u),w=Math.sqrt(v);if(0==w)return 0;var x=n*q+m*p*u,y=Math.atan2(w,x),z=m*p*t/w,A=1-z*z,B=x-2*n*q/A;isNaN(B)&&(B=0);var C=j/16*A*(4+j*(4-3*A));c=r,r=k+(1-C)*j*z*(y+C*w*(B+C*x*(-1+2*B*B)))}while(Math.abs(r-c)>1e-12&&++s<100);if(s>=100)return console.log("Formula failed to converge. Altering target position."),this._vincenty_inverse(a,{lat:b.lat,lng:b.lng-.01});var D=A*(h*h-i*i)/(i*i),E=1+D/16384*(4096+D*(-768+D*(320-175*D))),F=D/1024*(256+D*(-128+D*(74-47*D))),G=F*w*(B+F/4*(x*(-1+2*B*B)-F/6*B*(-3+4*w*w)*(-3+4*B*B))),H=i*E*(y-G),I=Math.atan2(p*t,m*q-n*p*u),J=Math.atan2(m*t,-n*p+m*q*u);return H=Number(H.toFixed(3)),{distance:H,initialBearing:I.toDegrees(),finalBearing:J.toDegrees()}},_intersection:function(a,b,c,d){var e=a.lat.toRadians(),f=a.lng.toRadians(),g=c.lat.toRadians(),h=c.lng.toRadians(),i=Number(b).toRadians(),j=Number(d).toRadians(),k=g-e,l=h-f,m=2*Math.asin(Math.sqrt(Math.sin(k/2)*Math.sin(k/2)+Math.cos(e)*Math.cos(g)*Math.sin(l/2)*Math.sin(l/2)));if(0==m)return null;var n=Math.acos((Math.sin(g)-Math.sin(e)*Math.cos(m))/(Math.sin(m)*Math.cos(e)));isNaN(n)&&(n=0);var o,p,q=Math.acos((Math.sin(e)-Math.sin(g)*Math.cos(m))/(Math.sin(m)*Math.cos(g)));Math.sin(h-f)>0?(o=n,p=2*Math.PI-q):(o=2*Math.PI-n,p=q);var r=(i-o+Math.PI)%(2*Math.PI)-Math.PI,s=(p-j+Math.PI)%(2*Math.PI)-Math.PI;if(0==Math.sin(r)&&0==Math.sin(s))return null;if(Math.sin(r)*Math.sin(s)<0)return null;var t=Math.acos(-Math.cos(r)*Math.cos(s)+Math.sin(r)*Math.sin(s)*Math.cos(m)),u=Math.atan2(Math.sin(m)*Math.sin(r)*Math.sin(s),Math.cos(s)+Math.cos(r)*Math.cos(t)),v=Math.asin(Math.sin(e)*Math.cos(u)+Math.cos(e)*Math.sin(u)*Math.cos(i)),w=Math.atan2(Math.sin(i)*Math.sin(u)*Math.cos(e),Math.cos(u)-Math.sin(e)*Math.sin(v)),x=f+w;return x=(x+3*Math.PI)%(2*Math.PI)-Math.PI,{lat:v.toDegrees(),lng:x.toDegrees()}},_merge_options:function(a,b){var c={};for(var d in a)c[d]=a[d];for(var d in b)c[d]=b[d];return c}}),L.geodesic=function(a,b){return new L.Geodesic(a,b)},function(){var a=L.GeoJSON.geometryToLayer;L.GeoJSON.geometryToLayer=function(b,c,d,e){if(b.properties&&b.properties.geodesic){var f,g="Feature"===b.type?b.geometry:b,h=g.coordinates,i=b.properties;switch(d=d||this.coordsToLatLng,i.geodesic_steps&&(e=L.extend({steps:i.geodesic_steps},e)),i.geodesic_wrap&&(e=L.extend({wrap:i.geodesic_wrap},e)),g.type){case"LineString":return f=this.coordsToLatLngs(h,0,d),new L.Geodesic([f],e);case"MultiLineString":return f=this.coordsToLatLngs(h,1,d),new L.Geodesic(f,e);default:console.log("Not yet supported drawing GeoJSON "+g.type+" as a geodesic: Drawing as non-geodesic.")}}return a.apply(this,arguments)}}();